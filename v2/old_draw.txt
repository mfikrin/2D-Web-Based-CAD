function draw(type,start_idx,count)
{
    
	const gl = canvas.getContext( "webgl" );

	if ( !gl )
	{
		alert( "Unable to setup WebGL. Your browser or computer may not support it." );

		return;
	}

	gl.clear(gl.COLOR_BUFFER_BIT);

	var vertices = VERTICES

	var vertex_buffer = gl.createBuffer( );

	gl.bindBuffer( gl.ARRAY_BUFFER, vertex_buffer );

	gl.bufferData( gl.ARRAY_BUFFER, new Float32Array( vertices ), gl.STATIC_DRAW );

	gl.bindBuffer( gl.ARRAY_BUFFER, null );

	var vertCode = 
		'attribute vec3 coordinates;' +
		'void main(void)' +
		'{' +
			' gl_Position = vec4(coordinates, 1.0);' +
		'}';

	var vertShader = gl.createShader( gl.VERTEX_SHADER );

	gl.shaderSource( vertShader, vertCode );

	gl.compileShader( vertShader );


	// const frag = `precision mediump float;
    
    // uniform vec4 u_fragColor;
    // void main() {
    //   gl_FragColor = u_fragColor;
    // }`

	var fragCode = 
        `void main(void){
            gl_FragColor = vec4${COLOR};
        }`;
		// 'void main(void)' +
		// '{' +
		// 	' gl_FragColor = vec4' + COLOR +
		// '}';
		

	var fragShader = gl.createShader( gl.FRAGMENT_SHADER );

	gl.shaderSource( fragShader, fragCode );

	gl.compileShader( fragShader );

	var shaderProgram = gl.createProgram( );

	gl.attachShader( shaderProgram, vertShader );

	gl.attachShader( shaderProgram, fragShader );

	gl.linkProgram( shaderProgram );

	gl.useProgram( shaderProgram );

	gl.bindBuffer( gl.ARRAY_BUFFER, vertex_buffer );

	var coord = gl.getAttribLocation( shaderProgram, "coordinates" );

	gl.vertexAttribPointer( coord, 3, gl.FLOAT, false, 0, 0 );

	gl.enableVertexAttribArray( coord );

	gl.clearColor( 0.0, 0.0, 0.0, .25 );

	gl.enable( gl.DEPTH_TEST );

	gl.clear( gl.COLOR_BUFFER_BIT );

	gl.viewport( 0, 0, canvas.width, canvas.height );


    
    gl.drawArrays( gl.TRIANGLE_STRIP, 0, 4);
    // gl.drawArrays( gl.LINES, 0, 6 );


	var drawn = DRAWN

	console.log("HMMM")

	console.log(drawn)
	console.log(drawn.OBJECT)
	console.log(drawn.OBJECT.length)
	


	// console.log(DRAWN.OBJECT)

	// console.log("BANYAK OBJECT",DRAWN.OBJECT.length)
	// for (let index = 0; index < DRAWN.OBJECT.length; index++) {
	// 	const element = array[index];
		
	// }
	console.log("type")
    console.log(type)
    switch (type) {
        case "line":
            gl.drawArrays( gl.LINES, start_idx, count);
            break;
        case "square":
            gl.drawArrays( gl.TRIANGLES_STRIP, start_idx,count );
            break;
        case "rectangle":
            gl.drawArrays( gl.TRIANGLE_STRIP, start_idx, count );
            break;
    }
	// gl.drawArrays( gl.TRIANGLE_FAN, 0, 6 );
}